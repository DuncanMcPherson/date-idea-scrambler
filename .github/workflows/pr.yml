name: Build, Test, and Deploy
'on': pull_request
jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
            -   name: Cache node modules
                uses: actions/cache@v3
                with:
                    path: ./node_modules
                    key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
            -   name: Install Packages
                run: npm install
            -   name: Build Project
                run: npm run build:staging
            -   name: Upload build artifacts
                uses: actions/upload-artifact@v4
                with:
                    name: ci-build
                    path: |
                        dist
                        database.rules.json
                        firebase.json
    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps:
            #            -   name: Checkout
            #                uses: actions/checkout@v4
            -   name: Download artifacts
                uses: actions/download-artifact@v4
                with:
                    name: ci-build
            -   name: Deploy Preview
                uses: FirebaseExtended/action-hosting-deploy@v0
                with:
                    repoToken: ${{ secrets.GITHUB_TOKEN }}
                    firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_DATE_IDEA_SCRAMBLER }}
                    projectId: date-idea-scrambler
    test:
        if: always()
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
            -   name: Cache Node Modules
                uses: actions/cache@v3
                with:
                    path: ./node_modules
                    key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}
            -   name: Install packages
                run: npm ci
            -   name: Run Tests
                run: npm run test:ci
            -   name: Upload test results
                if: always()
                uses: actions/upload-artifact@v4
                with:
                    name: test-results
                    path: test-results
    test-results:
        needs: test
        if: always()
        runs-on: ubuntu-latest
        steps:
            -   name: Download test results
                uses: actions/download-artifact@v4
                with:
                    name: test-results
            -   name: Publish test results
                uses: EnricoMi/publish-unit-test-result-action@v2
                with:
                    files: |
                        **/*.xml
            -   name: Publish Coverage Results
                uses: codecov/codecov-action@v4
                env:
                    CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
